html {
	box-sizing: border-box;
	font-size: 16px;
	font-family: sans-serif;
	scroll-behavior: smooth;
}

*,
*::after,
*::before {
	box-sizing: inherit;
}

a[href='#top'] {
	margin: 1rem;
	display: block;
	font-size: 2rem;
	text-align: center;
	text-decoration: none;
}

p {
	margin: 0;
	font-size: 1rem;
}

h2 {
	margin-top: 50vh;
	text-align: center;
}

img {
	margin: auto;
	display: block;
	max-width: 100%;
	height: auto;
}

.menu {
	margin-bottom: 100vh;
	font-size: 125%;
}

.menu li {
	margin-bottom: 1rem;
}

.container {
	margin: 0 auto;
	width: 80%;
	height: 80vh;
	background-color: #222;
	border: medium solid #000;
}

.item {
	padding: 1rem;
	font-size: 1.25rem;
	background-color: #666;
	border: medium solid #999;
}

.grid-explicit {
	display: grid;
	/* 3x3 */
	grid-template-columns: 50% 100px 1fr;
	grid-template-rows: 2rem 20vh 30%;

	/* 5x4 */
	grid-template-columns: repeat(5, 20%);
	grid-template-rows: repeat(4, auto);

	/* 4x5 */
	grid-template-columns: 20% repeat(2, 30%) 20%;
	grid-template-rows: repeat(5, auto);

	/* GAP */
	row-gap: 1rem;
	column-gap: 2rem;

	/* GAP 0 */
	gap: 0;
}

.grid-explicit .item:nth-child(10) {
	color: cyan;
	/* grid-row: 1 / 2;
	grid-column: 2 / 4; */
	grid-area: 1 / 2 / 2 / 4;
}

.grid-explicit .item:nth-child(12) {
	color: rgb(255, 174, 0);
	grid-row: span 2;
	grid-column: span 3;
}

.grid-explicit .item:nth-child(15) {
	color: rgb(225, 0, 255);
	grid-row: 2 / span 2;
	grid-column: 1 / span 2;
}

.grid-line-names {
	display: grid;
	grid-template-columns: repeat(3, 1fr);
	grid-template-rows: repeat(3, 1fr);
	grid-template-columns: [linea-c1] 1fr [linea-c2] 1fr [linea-c3] 1fr [linea-c4];
	grid-template-rows: [linea-r1] auto [linea-r2] auto [linea-r3] auto [linea-r4];
}

.grid-line-names .item:nth-child(3) {
	color: cyan;
	grid-row: linea-r3 / linea-r4;
	grid-column: linea-c1 / linea-c4;
}

.grid-areas {
	display: grid;
	grid-template-columns: 1fr 150px;
	grid-template-rows: 100px 1fr 1fr 50px;
	grid-template-areas:
		'header header'
		'content sidebar'
		'content .'
		'footer footer';
}

.header {
	grid-area: header;
}

.content {
	grid-area: content;
}

.sidebar {
	grid-area: sidebar;
}

.footer {
	grid-area: footer;
}

.grid-implicit {
	display: grid;
	grid-template-columns: repeat(4, 1fr);
	grid-template-rows: repeat(3, 150px);

	/* Grid Implícita es la que se forma automaticamente por Grid cuando no es especificado su formación en columnas y/o en filas */
}

.grid-flow {
	display: grid;
	grid-template-columns: repeat(5, 1fr);
	grid-template-rows: repeat(3, 100px);
	grid-auto-flow: row; /* Establece el tipo de flujo implícito (Row o Column) */
	grid-auto-rows: 200px; /* Establece el tamaños de las filas implícitas (Generadas automaticamente por grid) */
	grid-auto-flow: column;
	grid-auto-columns: 50px;
}

.grid-flow-dense {
	display: grid;
	grid-template-columns: repeat(5, 1fr);
	grid-template-rows: repeat(3, 140px);
	grid-auto-flow: row dense; /* Rellena los espacios en blanco que no fueron cubiertos de manera implícita */
}

.grid-flow-dense .item:nth-child(9) {
	color: cyan;
	grid-row: span 3;
	grid-column: span 3;
}

.grid-layers {
	display: grid;
	grid-template-columns: repeat(4, 1fr);
	grid-template-rows: repeat(4, 1fr);
}

.grid-layers .item:nth-child(1) {
	background-color: royalblue;
	grid-column: 1/3;
	grid-row: 1/3;
}

.grid-layers .item:nth-child(2) {
	background-color: teal;
	grid-column: 3/5;
	grid-row: 1/3;
}

.grid-layers .item:nth-child(3) {
	background-color: yellow;
	grid-column: 1/3;
	grid-row: 3/5;
}

.grid-layers .item:nth-child(4) {
	background-color: violet;
	grid-column: 3/5;
	grid-row: 3/5;
}

.grid-layers .item:nth-child(5) {
	background-color: salmon;
	grid-column: 2/4;
	grid-row: 2/4;
}

.grid-order {
	display: grid;
	grid-template-columns: repeat(3, 1fr);
	grid-template-rows: repeat(2, 1fr);
}

.grid-order .item:nth-child(1) {
	/* Order default is 0. Can modify this value for -1, 0 or 1 */
	order: 1;
}

.grid-order .item:nth-child(3) {
	order: -1;
}

.grid-align {
	display: grid;
	grid-template-columns: repeat(3, 200px);
	grid-template-rows: repeat(2, 200px);
	/* justify-items Alinea los elementos de manera horizontal (X) */
	justify-items: center;
	/* align-items Alinea los elementos de manera vertical (Y) */
	align-items: flex-start;
}

.grid-align-tracks {
	display: grid;
	grid-template-columns: repeat(3, 140px);
	grid-template-rows: repeat(2, 140px);
	/* justify-content Alinea los elementos de manera horizontal (X) */
	justify-content: center;
	/* align-content Alinea los elementos de manera vertical (Y) */
	align-content: center;
}

.grid-min-max {
	display: grid;
	grid-template-columns: repeat(4, 1fr);
	grid-template-columns: repeat(4, minmax(100px, 200px));
	grid-template-columns: repeat(4, minmax(min-content, 200px));
	grid-template-columns: repeat(4, minmax(100px, min-content));
	grid-template-columns: repeat(4, minmax(max-content, 200px));
	grid-template-columns: repeat(4, minmax(100px, max-content));
}

.grid-repeat {
	display: grid;
	grid-template-columns: repeat(
		3,
		15% 35% 50%
	); /* Repite en X el mismo patron 3 veces y luego sigue la grid implícita */
	grid-template-columns: repeat(1, 15% 20% 30% 35%);
	grid-template-rows: repeat(2, 60px 80px);
}

.grid-dynamics {
	display: grid;
	grid-template-columns: repeat(4, 100px);
	/* auto-fill Rellena la grid con tracks generados dinámicamente */
	grid-template-columns: repeat(auto-fill, 100px);
	/* auto-fit Ajusta la grid con los tracks existente */
	grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
}

.grid-responsive {
	display: grid;
	/* Podemos generar responsive desing sin necesidad de Media Queries de la siguiente forma */
	grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
	grid-template-columns: repeat(auto-fit, minmax(min-content, 1fr));
}
